
package UI.AdministrativeRole;

import Model.Emp.Emp;
import Model.Enterprise.Enterprise;
import Model.Organization.Organization;
import Model.Role.Role;
import Model.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @Author Deshna, Dhir, Prasad, Anisha
 */
public class AdministerUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdministerUserAccountJPanel
     */
    private JPanel container;
    private Enterprise enterprise;

    public AdministerUserAccountJPanel(JPanel container, Enterprise enterprise) {
        initComponents();
        this.enterprise = enterprise;
        this.container = container;

        
        /*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
        popOrganizationComboBox();
       
        popData();
    }

    public void popOrganizationComboBox() {
        orgJBox.removeAllItems();

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            orgJBox.addItem(organization);
        }
    }
    
    /*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
    
    public void populateEmployeeComboBox(Organization organization){
        empjBox.removeAllItems();
        
        for (Emp employee : organization.getEmpDir().getEmployeeList()){
            empjBox.addItem(employee);
        }
    }
    /*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
    private void populateRoleComboBox(Organization organization){
        roleJCombo.removeAllItems();
        for (Role role : organization.getSupportedRole()){
            roleJCombo.addItem(role);
        }
    }

    public void popData() {

        DefaultTableModel model = (DefaultTableModel) userJTable.getModel();

        model.setRowCount(0);
/*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDir().getUserAccountList()) {
                
                
                /*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/Object row[] = new Object[2];
                row[0] = ua;
                row[1] = ua.getRole();
                ((DefaultTableModel) userJTable.getModel()).addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createUserJButton = new javax.swing.JButton();
        nmeJTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        pwdfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        empjBox = new javax.swing.JComboBox();
        backjButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        orgJBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        roleJCombo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createUserJButton.setBackground(new java.awt.Color(255, 102, 0));
        createUserJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        createUserJButton.setText("Create User Account");
        createUserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserJButtonActionPerformed(evt);
            }
        });
        add(createUserJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, 220, 44));

        nmeJTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        nmeJTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nmeJTxtActionPerformed(evt);
            }
        });
        add(nmeJTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 480, 233, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("User Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 200, -1));

        userJTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userJTable);
        if (userJTable.getColumnModel().getColumnCount() > 0) {
            userJTable.getColumnModel().getColumn(0).setResizable(false);
            userJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 546, 179));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Password");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 530, 200, -1));

        pwdfield.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        add(pwdfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 540, 233, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Employee");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 200, -1));

        empjBox.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        empjBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        add(empjBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 350, 230, -1));

        backjButton1.setBackground(new java.awt.Color(255, 102, 102));
        backjButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        backjButton1.setText("Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 660, 130, 50));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Organization");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 200, -1));

        orgJBox.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        orgJBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgJBoxActionPerformed(evt);
            }
        });
        add(orgJBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, 230, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Role");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 200, -1));

        roleJCombo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        add(roleJCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, 230, -1));

        jLabel6.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(" Manage User Accounts");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 421, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UIAdministrativeRole.png"))); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 14, 1000, 780));
    }// </editor-fold>//GEN-END:initComponents

    private void createUserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserJButtonActionPerformed
         if (pwdfield.getText().equals("") || nmeJTxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Username or Password can't be empty");
        }
        else
        {
        String uName = nmeJTxt.getText();
        if (validatePassword(pwdfield.getText()))
        {
            
         String pwd = (pwdfield.getText());
        Organization org1 = (Organization) orgJBox.getSelectedItem();
        Emp emp12 = (Emp) empjBox.getSelectedItem();
        Role rle = (Role) roleJCombo.getSelectedItem();
        
        org1.getUserAccountDir().createUserAccount(uName, pwd, emp12, rle);
        
        popData();   
        }
        
        /*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
        else {
            JOptionPane.showMessageDialog(null, "Kindly enter 7-15 digit alphanumeric password");
        }
        }
        
        
        nmeJTxt.setText("");
        pwdfield.setText(""); 
    }//GEN-LAST:event_createUserJButtonActionPerformed
/*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
        /*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void orgJBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgJBoxActionPerformed
        Organization org34 = (Organization) orgJBox.getSelectedItem();
        if (org34 != null){
            populateEmployeeComboBox(org34);
            populateRoleComboBox(org34);
            /*submit the inputs and wait the output

creates new panel for new role in the organization

data to be defined.

data passed in the function.

*/
        }
    }//GEN-LAST:event_orgJBoxActionPerformed

    private void nmeJTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmeJTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nmeJTxtActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton createUserJButton;
    private javax.swing.JComboBox empjBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nmeJTxt;
    private javax.swing.JComboBox orgJBox;
    private javax.swing.JTextField pwdfield;
    private javax.swing.JComboBox roleJCombo;
    private javax.swing.JTable userJTable;
    // End of variables declaration//GEN-END:variables

    private boolean validatePassword(String text) {
        boolean flgrwm = false;
        Pattern patt = Pattern.compile("^[a-zA-Z]\\w{7,15}$");    //reqex to take in alphanumeric characters of length 6 to 14
        Matcher matt = patt.matcher(text);        
        if (!matt.matches())
        {             
            JOptionPane.showMessageDialog(null, "Password pattern is not valid"); 
            flgrwm = false;
        }  
        else{flgrwm = true;}
        return flgrwm;   
    }
}